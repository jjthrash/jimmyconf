#!/usr/bin/env ruby
require 'rubygems'
require 'json'
require 'punch'

def following_friday(date)
    date += 1 while date.wday != 5
    date
end

def this_friday
    following_friday Date.today
end

def time_from_date(date)
    Time.local(date.year, date.month, date.mday)
end

def format_duration(seconds)
    hours = seconds / 3600
    seconds -= hours * 3600
    minutes = seconds / 60
    '%02d:%02d' % [hours, minutes]
end

if __FILE__ == $0
    unless ARGV[0]
        puts "Need to specify a project"
    else
        proj = Punch.new(ARGV[0])

        friday = this_friday
        friday = following_friday(Date.parse(ARGV[1])) if ARGV[1]
        (-4..0).zip(-3..1) do |b, e|
            puts "%s\n  %s/%.2f (sum: %s/%.2f)" % [
                Date::DAYNAMES[(friday + b).wday],
                format_duration(proj.summary(
                            :after => time_from_date(friday + b),
                            :before => time_from_date(friday + e)).values.inject(0, :+)),
                proj.summary(
                            :after => time_from_date(friday + b),
                            :before => time_from_date(friday + e)).values.inject(0, :+).to_f / 3600,
                format_duration(proj.summary(
                            :after => time_from_date(friday - 4),
                            :before => time_from_date(friday + e)).values.inject(0, :+)),
                proj.summary(
                            :after => time_from_date(friday - 4),
                            :before => time_from_date(friday + e)).values.inject(0, :+).to_f / 3600,
            ]
        end
    end
end
