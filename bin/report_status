#!/usr/bin/env ruby

require 'rubygems'
require 'date'
require 'yaml'
load File.join(File.dirname(__FILE__), 't2d')

def client
  gem 'ruby-freshbooks'
  require 'ruby-freshbooks'
  @client ||= FreshBooks::Client.new('brownbirdlabs.freshbooks.com', '8319a5b5826a23c8a96664cd55abf85a')
end

def projects
  @projects ||= YAML.load_file(File.expand_path('~/.projects.yml'))
end

def round(x)
  (x * 100.0).round / 100.0
end

def hours(project, after = nil, before = nil)
  opts = {:project_id => projects[project]['freshbooks_id']}
  opts[:date_from] = after if after
  opts[:date_to]   = before if before
  list = client.time_entry.list(opts)["time_entries"]["time_entry"]
  list = [list] unless list.kind_of?(Array)
  list.map {|te|
    te['hours'].to_f
  }.inject(0) {|a,b| a+b}
end

def weeks_back(count)
  previous_sunday(Date.today - 7)
end

def previous_sunday(date)
  if date.wday == 0
    date
  else
    previous_sunday(date - 1)
  end
end

def branch_list
  `git branch`.chomp.split("\n")
end

def branches
  branch_list.map {|s| s[2..-1]}
end

def current_branch
  branch_list.find {|s| s =~ /^\* / }[2..-1]
end

def branch_statuslog(branch, date)
  old_branch = current_branch
  `git checkout #{branch} > /dev/null 2> /dev/null`
  result =`statuslog #{date}`
  `git checkout #{old_branch} > /dev/null 2> /dev/null`
  result.chomp.split("\n")
end

def statuslog
  branches.map { |branch|
    branch_statuslog(branch, weeks_back(0))
  }.flatten.uniq
end

if __FILE__ == $0
  require 'optparse'

  options = {
    :number => 0,
    :time => true
  }

  options_parser = OptionParser.new do |opt|
    opt.banner = "Usage: #{$0} PROJECT"
    opt.on('-n W', 'how many weeks back (default 0, last week)') do |number|
      options[:number] = number.to_i
    end
    opt.on('-t', 'do not calculate hours') do
      options[:time] = false
    end
  end

  options_parser.parse!

  if ARGV[0]
    start_date = weeks_back(options[:number])
    if options[:time]
      puts "Last week I spent %.2f hours doing the following:" % [hours(ARGV[0], start_date, previous_sunday(start_date + 7)).to_s]
    else
      puts "Last week I did the following:"
    end
    puts statuslog.join("\n")
  else
    puts options_parser
  end
end

# vim:sts=2 sw=2 ts=2
